[{"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\App.js":"1","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\shared\\leaders.js":"2","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\MainComponent.js":"3","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\ContactComponent.js":"4","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\dishDetails.js":"5","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\index.js":"6","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\HomeComponent.js":"7","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\AboutUsComponent.js":"8","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\MenuComponent.js":"9","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\shared\\dishes.js":"10","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\redux\\configureStore.js":"11","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\redux\\comments.js":"12"},{"size":545,"mtime":1611651051881,"results":"13","hashOfConfig":"14"},{"size":2345,"mtime":1610548504398,"results":"15","hashOfConfig":"14"},{"size":2159,"mtime":1611651511131,"results":"16","hashOfConfig":"14"},{"size":9449,"mtime":1611655366709,"results":"17","hashOfConfig":"14"},{"size":6175,"mtime":1611658540612,"results":"18","hashOfConfig":"14"},{"size":640,"mtime":1610000554475,"results":"19","hashOfConfig":"14"},{"size":1123,"mtime":1610550365406,"results":"20","hashOfConfig":"14"},{"size":4174,"mtime":1610604456749,"results":"21","hashOfConfig":"14"},{"size":2014,"mtime":1610603121629,"results":"22","hashOfConfig":"14"},{"size":1490,"mtime":1610548430836,"results":"23","hashOfConfig":"14"},{"size":524,"mtime":1611826799855,"results":"24","hashOfConfig":"14"},{"size":173,"mtime":1611826858555,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15v6zsh",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\App.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\shared\\leaders.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\MainComponent.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\ContactComponent.js",["53"],"/* eslint-disable react/jsx-pascal-case */\r\nimport React, { Component } from \"react\";\r\n\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass ContactUs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // binding the methods\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  //handling after clicking on submit button\r\n  handleSubmit(values) {\r\n    console.log(\"current state is\" + JSON.stringify(values));\r\n    alert(\"current state is\" + JSON.stringify(values));\r\n    //event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12 contactUs\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1 contactUs\">\r\n            <h5>Our Address</h5>\r\n            <address className=\"contactUs\">\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a href=\"/\" role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      validEmail: \"Invalid Email Address\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n",["54","55"],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\dishDetails.js",["56","57","58"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    console.log(\"current state is\" + JSON.stringify(values));\r\n    alert(\"current state is\" + JSON.stringify(values));\r\n    //event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"Comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".Comment\"\r\n                    id=\"Comment\"\r\n                    name=\"Comment\"\r\n                    rows=\"6\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function RenderDish(props){}\r\nfunction RenderDish({ dish }) {\r\n  if (dish != null) {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <Card>\r\n          <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle> {dish.name} </CardTitle>\r\n            <CardText> {dish.description} </CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\n// function RenderComments(props){}\r\nfunction RenderComments({ comments }) {\r\n  if (comments != null) {\r\n    const cmnts = comments.map((commnts) => {\r\n      return (\r\n        <ul key={commnts.id} className=\"list-unstyled\">\r\n          <li>\r\n            <p> {commnts.comment} </p>\r\n            <p>\r\n              {\" \"}\r\n              -- {commnts.author}, &nbsp;\r\n              {new Intl.DateTimeFormat(\"en-US\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"2-digit\",\r\n              }).format(new Date(Date.parse(commnts.date)))}\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4> Comments </h4>\r\n        {cmnts}\r\n      </div>\r\n    );\r\n    // if comments is empty\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n  console.log(props);\r\n  if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments comments={props.comments} />\r\n\r\n          <CommentForm />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3>NUL</h3>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DishDetail;\r\n","D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\index.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\HomeComponent.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\AboutUsComponent.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\components\\MenuComponent.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\shared\\dishes.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\redux\\configureStore.js",[],"D:\\zhoha damani\\Coursera\\2611\\confusion\\src\\redux\\comments.js",[],{"ruleId":"59","severity":1,"message":"60","line":2,"column":17,"nodeType":"61","messageId":"62","endLine":2,"endColumn":26},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":59,"column":19,"nodeType":"69","endLine":63,"endColumn":20},{"ruleId":"67","severity":1,"message":"70","line":78,"column":19,"nodeType":"69","endLine":89,"endColumn":21},{"ruleId":"67","severity":1,"message":"71","line":108,"column":19,"nodeType":"69","endLine":114,"endColumn":21},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]